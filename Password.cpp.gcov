        -:    0:Source:Password.cpp
        -:    0:Graph:Password.gcno
        -:    0:Data:Password.gcda
        -:    0:Runs:1
        -:    1:#include "Password.h"
        -:    2:#include <string>
        -:    3:
        -:    4:using std::string;
        -:    5:
        -:    6:/*
        -:    7:  The function receives a string counts how many times the same character 
        -:    8:  occurs at the beginning of the string, before any other characters (or the
        -:    9:  end of the string). The function is case-sensitive so 'Z' is different than
        -:   10:  'z' and any ASCII characters are allowed.
        -:   11:*/
function _ZN8Password24count_leading_charactersENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 13 returned 100% blocks executed 100%
       13:   12:int Password::count_leading_characters(string phrase){
       13:   13:  int repetition = 1;
       13:   14:  int index = 0;
       17:   15:  while( index < phrase.length()-1 && phrase[index] == phrase[index+1] ){
call    0 returned 17
branch  1 taken 12 (fallthrough)
branch  2 taken 5
call    3 returned 12
call    4 returned 12
branch  5 taken 4 (fallthrough)
branch  6 taken 8
branch  7 taken 4
branch  8 taken 13 (fallthrough)
        4:   16:    repetition++;
        4:   17:    index++;
        -:   18:  }
       13:   19:  return repetition;
        -:   20:}
        -:   21:
        -:   22:
        -:   23:/*
        -:   24:  receives a string and returns whether it has both at least one upper-case
        -:   25:  letter and at least one lower-case letter
        -:   26:*/
function _ZN8Password14has_mixed_caseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 9 returned 100% blocks executed 100%
        9:   27:bool Password::has_mixed_case(string pass){
        9:   28:  return false;
        -:   29:}
        -:   30:
        -:   31:/*
        -:   32:  Checks if the string contains at least one special character.
        -:   33:  Special characters are defined as non-alphanumeric characters.
        -:   34:*/
function _ZN8Password16has_special_charENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 4 returned 100% blocks executed 100%
        4:   35:bool Password::has_special_char(string pass) {
       16:   36:  for (char c : pass) {
call    0 returned 4
call    1 returned 4
call    2 returned 14
call    3 returned 12
call    4 returned 16
branch  5 taken 14
branch  6 taken 2 (fallthrough)
       14:   37:    if (!isalnum(c)) {
branch  0 taken 2 (fallthrough)
branch  1 taken 12
        2:   38:      return true;
        -:   39:    }
        -:   40:  }
        2:   41:  return false;
        -:   42:}
